
// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

/*
// for people who want stable - not yet functional for MC 1.8.8 - we require the forgegradle 2.1 snapshot
plugins {
    id "net.minecraftforge.gradle.forge" version "2.0.2"
}
*/

// Java level 1.8
targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

version = "MC" + project.mcversion + "-" + project.modversion
group= "net.einsteinsci.betterbeginnings" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "betterbeginnings"

minecraft {
    version = project.mcversion + "-" + project.forgeversion
    runDir = "run"
	replace '${version}', project.modversion

    // dynamic source code version
    replace "@version@", project.version
    replaceIn "${mod_reference}"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = project.mappings

    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories 
{
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "modmaven.k-4u.nl"
    }
}

dependencies {
    // compile against the JEI API but do not include it at runtime
    deobfProvided "mezz.jei:jei_${project.mcversion}:${project.jeiversion}:api"
    // at runtime, use the full JEI jar
    runtime "mezz.jei:jei_${project.mcversion}:${project.jeiversion}"

    compile fileTree(dir: 'libs', include: '*.jar')
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.modversion, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
